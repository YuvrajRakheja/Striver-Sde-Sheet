//Extended Moore voting algorithm
//Optimized
//TC-0(N) 
//SC-O(1)

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> ans=new ArrayList<>();
        if(nums.length==1){
            ans.add(nums[0]);
            return ans;
        }
        int nos1=-1,nos2=-1,count1=0,count2=0;
        
        for(int i=0;i<nums.length;i++){
            if(nos1==nums[i]){
                count1++;
            }else if(nos2==nums[i]){
                count2++;
            }else if(count1==0){
                nos1=nums[i];
                count1=1;
            }else if(count2==0){
                nos2=nums[i];
                count2=1;
            }else{
                count1--;
                count2--;
            }
        }
       // now we check if our nos1 and nos2 is greater than nums/3
        count1=count2=0;
        
        for(int i=0;i<nums.length;i++){
            if (nums[i] == nos1)
                count1++;
            else if (nums[i] == nos2)
                count2++;
        }
        if(count1>(nums.length/3))
            ans.add(nos1);
        if(nos1!=nos2 && count2>(nums.length/3))
            ans.add(nos2);
        
        return ans;
    }
}
